# -*- coding: utf-8 -*-
"""
–§–∞–π–ª –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è Auto OLED Brightness
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏: —Ä—É—Å—Å–∫–∏–π (ru), –∞–Ω–≥–ª–∏–π—Å–∫–∏–π (en)
"""

TRANSLATIONS = {
    'ru': {
        # –û—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
        'mode_auto': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —è—Ä–∫–æ—Å—Ç—å',
        'mode_manual': '–†—É—á–Ω–∞—è —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞',
        'brightness': '–Ø—Ä–∫–æ—Å—Ç—å',
        'light_level': '–£—Ä–æ–≤–µ–Ω—å –æ—Å–≤–µ—â–µ–Ω–∏—è',
        'sensor_value': '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–∞',
        'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        'hide': '–°–≤–µ—Ä–Ω—É—Ç—å',
        'reconnect': '–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥–∞—Ç—á–∏–∫',
        'searching_sensor': '–ü–æ–∏—Å–∫ –¥–∞—Ç—á–∏–∫–∞...',
        'sensor_found': '–î–∞—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω',
        'sensor_not_found': '–î–∞—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω',
        'connection_lost': '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ',
        'repeat_search': '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
        'settings_title': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞',
        'mode_title': '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã',
        'mode_esp8266': 'ESP8266 (WiFi)',
        'mode_digispark': 'Digispark (USB)',
        'mode_digispark_unavailable': 'Digispark (USB) - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ—Ç pyusb)',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞
        'calibration_title': '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –¥–∞—Ç—á–∏–∫–∞',
        'calibration_info': '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—Ç—á–∏–∫–∞ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏.',
        'sensor_min': '–ú–∏–Ω–∏–º—É–º (—Ç–µ–º–Ω–æ):',
        'sensor_max': '–ú–∞–∫—Å–∏–º—É–º (—Å–≤–µ—Ç–ª–æ):',
        'current_value': '–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ',
        'set_min': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–Ω–∏–º—É–º',
        'set_max': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º—É–º',
        'calibration_saved': '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –Ø—Ä–∫–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞
        'brightness_title': '–Ø—Ä–∫–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º)',
        'min_brightness': '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —è—Ä–∫–æ—Å—Ç—å:',
        'max_brightness': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —è—Ä–∫–æ—Å—Ç—å:',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –£—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ
        'averaging_title': '–£—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏–π',
        'averaging_period': '–ü–µ—Ä–∏–æ–¥ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è:',
        'averaging_info': '–í—Ä–µ–º—è —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–∞. –ß–µ–º –º–µ–Ω—å—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ —Ä–µ–∞–∫—Ü–∏—è.',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - ESP8266
        'esp_title': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ESP8266',
        'esp_ip': 'IP –∞–¥—Ä–µ—Å:',
        'esp_open_web': 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ESP8266',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ó–∞–ø—É—Å–∫
        'startup_title': '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞',
        'autostart': '–ó–∞–≥—Ä—É–∂–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å Windows',
        'start_minimized': '–ó–∞–ø—É—Å–∫–∞—Ç—å —Å–≤–µ—Ä–Ω—É—Ç—ã–º –≤ —Ç—Ä–µ–π',
        
        # –ö–Ω–æ–ø–∫–∏
        'save_close': 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å',
        'cancel': '‚ùå –û—Ç–º–µ–Ω–∞',
        'success': '–£—Å–ø–µ—Ö',
        'settings_saved': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n–ò–∑–º–µ–Ω–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Å—Ä–∞–∑—É.',
        
        # –¢—Ä–µ–π
        'tray_show': '–ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ',
        'tray_settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        'tray_restart': '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å',
        'tray_exit': '–í—ã—Ö–æ–¥',
        
        # –°–æ–æ–±—â–µ–Ω–∏—è
        'device_not_found': '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
        'connecting': '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...',
        'connected': '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ',
        
        # –î–∏–∞–ª–æ–≥–∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
        'calib_min_title': '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –º–∏–Ω–∏–º—É–º–∞',
        'calib_min_message': '–ó–∞–∫—Ä–æ–π—Ç–µ –¥–∞—Ç—á–∏–∫ —Ä—É–∫–æ–π –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω—É—é —Ç–µ–º–Ω–æ—Ç—É.\n\n–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è OK –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∏–∑–º–µ—Ä—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è 5 —Å–µ–∫—É–Ω–¥.\n\n–ì–æ—Ç–æ–≤—ã?',
        'calib_max_title': '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –º–∞–∫—Å–∏–º—É–º–∞',
        'calib_max_message': '–ù–∞–ø—Ä–∞–≤—å—Ç–µ –¥–∞—Ç—á–∏–∫ –Ω–∞ —è—Ä–∫–∏–π —Å–≤–µ—Ç (–ª–∞–º–ø–∞, –æ–∫–Ω–æ).\n\n–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è OK –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∏–∑–º–µ—Ä—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è 5 —Å–µ–∫—É–Ω–¥.\n\n–ì–æ—Ç–æ–≤—ã?',
        'measurement': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ',
        'calib_min_success': '–ú–∏–Ω–∏–º—É–º –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω',
        'calib_max_success': '–ú–∞–∫—Å–∏–º—É–º –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω',
        'error': '–û—à–∏–±–∫–∞',
        'sensor_read_error': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞—Ç—á–∏–∫!',
        'current_calibration': '–¢–µ–∫—É—â–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞',
        'minimum': '–ú–∏–Ω–∏–º—É–º',
        'maximum': '–ú–∞–∫—Å–∏–º—É–º',
        
        # –ö–Ω–æ–ø–∫–∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
        'calibrate_min': '–ö–∞–ª–∏–±—Ä–æ–≤–∞—Ç—å –º–∏–Ω–∏–º—É–º (—Ç–µ–º–Ω–æ)',
        'calibrate_max': '–ö–∞–ª–∏–±—Ä–æ–≤–∞—Ç—å –º–∞–∫—Å–∏–º—É–º (—Å–≤–µ—Ç–ª–æ)',
        
        # –°—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        'sensor': '–î–∞—Ç—á–∏–∫',
        'averaging_for': '–£—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ –∑–∞',
        'sec': '—Å–µ–∫',
        'target': '–¶–µ–ª–µ–≤–∞—è',
        'current_status': '–¢–µ–∫—É—â–∞—è',
    },
    
    'en': {
        # Main window
        'mode_auto': 'Automatic Brightness',
        'mode_manual': 'Manual Control',
        'brightness': 'Brightness',
        'light_level': 'Light Level',
        'sensor_value': 'Sensor Value',
        'settings': 'Settings',
        'hide': 'Hide',
        'reconnect': 'Reconnect Sensor',
        'searching_sensor': 'Searching sensor...',
        'sensor_found': 'Sensor found',
        'sensor_not_found': 'Sensor not found',
        'connection_lost': 'Connection lost',
        'repeat_search': 'Repeat Search',
        
        # Settings - Mode
        'settings_title': 'Settings and Calibration',
        'mode_title': 'Operating Mode',
        'mode_esp8266': 'ESP8266 (WiFi)',
        'mode_digispark': 'Digispark (USB)',
        'mode_digispark_unavailable': 'Digispark (USB) - unavailable (no pyusb)',
        
        # Settings - Calibration
        'calibration_title': 'Sensor Calibration',
        'calibration_info': 'Adjust the light sensor sensitivity range.',
        'sensor_min': 'Minimum (dark):',
        'sensor_max': 'Maximum (bright):',
        'current_value': 'Current value',
        'set_min': 'Set Minimum',
        'set_max': 'Set Maximum',
        'calibration_saved': 'Calibration saved',
        
        # Settings - Screen Brightness
        'brightness_title': 'Screen Brightness (automatic mode)',
        'min_brightness': 'Minimum brightness:',
        'max_brightness': 'Maximum brightness:',
        
        # Settings - Averaging
        'averaging_title': 'Sensor Averaging',
        'averaging_period': 'Averaging period:',
        'averaging_info': 'Sensor data averaging time. Lower value = faster response.',
        
        # Settings - ESP8266
        'esp_title': 'ESP8266 Settings',
        'esp_ip': 'IP Address:',
        'esp_open_web': 'üåê Open ESP8266 Web Interface',
        
        # Settings - Startup
        'startup_title': 'Startup Options',
        'autostart': 'Start with Windows',
        'start_minimized': 'Start minimized to tray',
        
        # Buttons
        'save_close': 'üíæ Save and Close',
        'cancel': '‚ùå Cancel',
        'success': 'Success',
        'settings_saved': 'Settings saved!\n\nBrightness changes applied immediately.',
        
        # Tray
        'tray_show': 'Show Window',
        'tray_settings': 'Settings',
        'tray_restart': 'Restart',
        'tray_exit': 'Exit',
        
        # Messages
        'device_not_found': 'Device not found',
        'connecting': 'Connecting...',
        'connected': 'Connected',
        
        # Calibration dialogs
        'calib_min_title': 'Minimum Calibration',
        'calib_min_message': 'Cover the sensor with your hand or create complete darkness.\n\nAfter clicking OK, the program will measure values for 5 seconds.\n\nReady?',
        'calib_max_title': 'Maximum Calibration',
        'calib_max_message': 'Point the sensor at bright light (lamp, window).\n\nAfter clicking OK, the program will measure values for 5 seconds.\n\nReady?',
        'measurement': 'Measurement',
        'calib_min_success': 'Minimum calibrated',
        'calib_max_success': 'Maximum calibrated',
        'error': 'Error',
        'sensor_read_error': 'Failed to read sensor!',
        'current_calibration': 'Current calibration',
        'minimum': 'Minimum',
        'maximum': 'Maximum',
        
        # Calibration buttons
        'calibrate_min': 'Calibrate minimum (dark)',
        'calibrate_max': 'Calibrate maximum (bright)',
        
        # Status strings
        'sensor': 'Sensor',
        'averaging_for': 'Averaging for',
        'sec': 'sec',
        'target': 'Target',
        'current_status': 'Current',
    }
}


class Localization:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    
    def __init__(self, language='ru'):
        self.language = language
        self.translations = TRANSLATIONS.get(language, TRANSLATIONS['ru'])
    
    def get(self, key, default=None):
        """–ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –ø–æ –∫–ª—é—á—É"""
        return self.translations.get(key, default or key)
    
    def set_language(self, language):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫"""
        if language in TRANSLATIONS:
            self.language = language
            self.translations = TRANSLATIONS[language]
            return True
        return False
    
    def get_language(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫"""
        return self.language
    
    def get_available_languages(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤"""
        return list(TRANSLATIONS.keys())


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ (—Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ)
_localization = Localization()


def get_text(key, default=None):
    """–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–≤–æ–¥—É"""
    return _localization.get(key, default)


def set_language(language):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return _localization.set_language(language)


def get_language():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫"""
    return _localization.get_language()


def get_localization():
    """–ü–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏"""
    return _localization
